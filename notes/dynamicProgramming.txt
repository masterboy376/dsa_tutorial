dynamic programming : 
-those who do not remember their past are condemned to repeat it.
-if we can solve smaller problem then we can use its learning to solve bigger problem.

-1. optimal substructure: if we can write a recurrence relation, then a problem is said to have optimal substructure.
-2. overlapping subtructure: if our subproblems repeat, then a problem is said to have overlapping subproblems.

-solution to problem 2:
1. memoization(top-down): a lookup table is maintained and    checked before computation of any state. recursion is 
involved.
2. tabulation(bottom-up): solution is built from base. it is an iterative process.

-key points:
1. minimisation and maximistion problems are generally solved with dp where we want exhaustive solution . (sometimes with binary search on answer.)
2. "find the number of ways" is also a very popular type of dp problems.
3. whereever we can form a recurrence relation or given in question can be solved using dp. (sometimes with matrix exponentiation.)

